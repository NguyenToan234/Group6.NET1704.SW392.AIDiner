// <auto-generated />
using System;
using Group6.NET1704.SW392.AIDiner.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Group6.NET1704.SW392.AIDiner.DAL.Migrations
{
    [DbContext(typeof(AIDinerDbContext))]
    partial class AIDinerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Category", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CategoryID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.ChatbotAI", b =>
                {
                    b.Property<Guid>("ChatbotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DishID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChatbotID");

                    b.HasIndex("DishID");

                    b.HasIndex("UserID");

                    b.ToTable("ChatbotAI");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Dish", b =>
                {
                    b.Property<Guid>("DishID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DishName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MenuID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("DishID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("MenuID");

                    b.ToTable("Dish");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.FavoriteRecipe", b =>
                {
                    b.Property<Guid>("FavoriteRecipeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DishID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FavoriteRecipeID");

                    b.ToTable("FavoriteRecipe");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Feedback", b =>
                {
                    b.Property<Guid>("FeedbackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DishID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Rating")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeedbackID");

                    b.HasIndex("DishID");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Ingredient", b =>
                {
                    b.Property<Guid>("IngredientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IngredientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Quantity")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IngredientID");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Maintenance", b =>
                {
                    b.Property<Guid>("MaintenanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChatbotID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Technician")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaintenanceID");

                    b.HasIndex("ChatbotID");

                    b.ToTable("Maintenance");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Menu", b =>
                {
                    b.Property<Guid>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuID");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Order", b =>
                {
                    b.Property<Guid>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.OrderDetail", b =>
                {
                    b.Property<Guid>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DishID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("Quantity")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("DishID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Payment", b =>
                {
                    b.Property<Guid>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PaymentID");

                    b.HasIndex("OrderID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Recipe", b =>
                {
                    b.Property<Guid>("RecipeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IngredientID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecipeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RecipeID");

                    b.HasIndex("UserID");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.UserRole", b =>
                {
                    b.Property<Guid>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.ChatbotAI", b =>
                {
                    b.HasOne("Group6.NET1704.SW392.AIDiner.DAL.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Group6.NET1704.SW392.AIDiner.DAL.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Dish", b =>
                {
                    b.HasOne("Group6.NET1704.SW392.AIDiner.DAL.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Group6.NET1704.SW392.AIDiner.DAL.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.FavoriteRecipe", b =>
                {
                    b.HasOne("Group6.NET1704.SW392.AIDiner.DAL.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("FavoriteRecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Feedback", b =>
                {
                    b.HasOne("Group6.NET1704.SW392.AIDiner.DAL.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Maintenance", b =>
                {
                    b.HasOne("Group6.NET1704.SW392.AIDiner.DAL.ChatbotAI", "ChatbotAI")
                        .WithMany()
                        .HasForeignKey("ChatbotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatbotAI");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.OrderDetail", b =>
                {
                    b.HasOne("Group6.NET1704.SW392.AIDiner.DAL.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Group6.NET1704.SW392.AIDiner.DAL.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Payment", b =>
                {
                    b.HasOne("Group6.NET1704.SW392.AIDiner.DAL.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.Recipe", b =>
                {
                    b.HasOne("Group6.NET1704.SW392.AIDiner.DAL.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Group6.NET1704.SW392.AIDiner.DAL.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Group6.NET1704.SW392.AIDiner.DAL.User", b =>
                {
                    b.HasOne("Group6.NET1704.SW392.AIDiner.DAL.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
